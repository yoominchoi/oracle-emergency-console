import cx_Oracle

def get_db_connection():
    dsn = cx_Oracle.makedsn("localhost", 1521, service_name="freepdb1")
    conn = cx_Oracle.connect(user="user1", password="yoominchoi1234A", dsn=dsn)
    return conn

def init_db():
    conn = get_db_connection()
    cursor = conn.cursor()
    
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS users (
            id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            name VARCHAR2(100) NOT NULL,
            user_type CHAR(1) CHECK (user_type IN ('G', 'A')) NOT NULL,
            location VARCHAR2(100),
            is_safe CHAR(1) CHECK (is_safe IN ('Y', 'N')) NOT NULL,
            witness_info VARCHAR2(255),
            is_urgent CHAR(1) CHECK (is_urgent IN ('Y', 'N')) NOT NULL
        )
    """)
    
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS incident (
            id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
            updated_by NUMBER REFERENCES users(id),
            shooter_location VARCHAR2(255)
            alert_msg VARCHAR2(100),
            init_location VARCHAR2(100) NOT NULL,
        )
    """)
    
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS people_status (
            incident_id NUMBER PRIMARY KEY REFERENCES incident(id),
            safe_count NUMBER DEFAULT 0,
            unsafe_count NUMBER DEFAULT 0,
            witness_info_list CLOB,
            urgent_list CLOB
        )
    """)
    
    conn.commit()
    cursor.close()
    conn.close()

def update_incident(incident_id, column, value):
    conn = get_db_connection()
    cursor = conn.cursor()
    
    if column == "alert_msg":
        cursor.execute("SELECT alert_msg FROM incident WHERE id = :incident_id FOR UPDATE", incident_id=incident_id)
        row = cursor.fetchone()
        current_message = row[0] if row and row[0] is not None else ''
        new_message = current_message + value + '\n'
        cursor.execute("UPDATE incident SET alert_msg = :new_message, timestamp = SYSTIMESTAMP WHERE id = :incident_id",
                       new_message=new_message, incident_id=incident_id)
    else:
        query = f"UPDATE incident SET {column} = :value, timestamp = SYSTIMESTAMP WHERE id = :incident_id"
        cursor.execute(query, value=value, incident_id=incident_id)
    
    conn.commit()
    cursor.close()
    conn.close()

def fetch_incident():
    conn = get_db_connection()
    cursor = conn.cursor()
    
    cursor.execute("SELECT * FROM incident ORDER BY timestamp DESC")
    rows = cursor.fetchall()
    cursor.close()
    conn.close()
    
    return rows

def fetch_latest_note():
    conn = get_db_connection()
    if conn == None:
        print('connection lost in latest note')
        return
    cursor = conn.cursor()
    
    cursor.execute("SELECT alert_msg FROM incident WHERE ROWNUM = 1 ORDER BY timestamp DESC")
    row = cursor.fetchone()
    cursor.close()
    conn.close()
    
    return row[0] if row else None

def fetch_shooter_location(incident_id):
    conn = get_db_connection()
    cursor = conn.cursor()
    
    cursor.execute("SELECT shooter_location FROM incident WHERE id = :incident_id", incident_id=incident_id)
    row = cursor.fetchone()
    cursor.close()
    conn.close()
    
    return row[0] if row else None
